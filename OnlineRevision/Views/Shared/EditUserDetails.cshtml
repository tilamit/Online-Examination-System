@model OnlineRevision.DbContext.UserDetails

@{
    ViewBag.Title = "Edit User Details";
    //Layout = null;
}

<style>
    .box.box-primary {
        border-top-color: #3c8dbc !important;
    }
</style>

@Html.AntiForgeryToken()
<div class="row">
    <div class="col-md-12">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title"><b>Student Details</b></h3>
            </div>

            <div class="row">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(model => model.UserId)

                    <div class="col-md-6">
                        <div class="form-group" id="userDetailsId">
                            @Html.LabelFor(model => model.UserId, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.UserName, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserName)
                            </div>
                        </div>

                        <div class="form-group">
                            @*Change Password*@
                            @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DateOfBirth, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DateOfBirth)
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="button" id="btnAdd" value="Submit" class="btn btn-primary" />
                            </div>
                        </div>

                        <div>
                            <div id="hide" class="alert alert-success alert-dismissible fade show"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Table row -->
<div class="row">
    <div class="col-xs-12 table-responsive">
        <table class="table table-striped table-condensed" id="userDetails">
            <thead>
                <tr>
                    <th>Transaction Id</th>
                    <th>Valid Till</th>
                    <th>Created On</th>
                    <th>Subscribed For (Days)</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
    <!-- /.col -->
</div>
<!-- /.row -->

<script type="text/javascript">
    $(document).ready(function () {
        var url = '@Url.Action("UpdateUserDetails", "Dashboard")';
        $('#hide').hide();
        $('#userDetailsId').hide();

        $('#btnAdd').click(function () {
            debugger;
            var id = $("#UserId").val();
            var name = $("#UserName").val();
            var pass = $("#Password").val();
            var email = $("#Email").val();
            var dateOfBirth = $("#DateOfBirth").val();

            $.post(url, { id: id, name: name, pass: pass, email: email, dateOfBirth: dateOfBirth }, function (response) {
                if (response) {
                    $('#hide').show();
                    $('#hide').html(response.value);
                    $('#hide').hide().delay(1500).fadeIn('slow');

                    $("#userName").val('');
                    $("#Password").val('');
                    $("#Email").val('');
                    $("#DateOfBirth").val('');
                } else {
                }
            }).fail(function () {
                alert("Oops! Didn't add.");
            });
        });

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetAllTransactions", "Dashboard")',
            data: JSON.stringify({ id: '@TempData["emailStudent"]' }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                var userTable = $('#userDetails tbody');
                userTable.empty();

                var html = "";
                $(data).each(function (index, user) {
                    var startDate = new Date(getFormattedDate(user.AddedOn));
                    var endDate = new Date(getFormattedDate(user.ValidTill));

                    days = (endDate - startDate) / (1000 * 60 * 60 * 24);


                    html += ('<tr><td class="details">' + user.PaymentId +
                             '</td><td class="details">' + getFormattedDate(user.ValidTill) +
                             '</td><td class="details">' + getFormattedDate(user.AddedOn) +
                             '</td><td class="details">' + Math.round((new Date(getFormattedDate(user.ValidTill)) - new Date(getFormattedDate(user.AddedOn))) / (1000 * 60 * 60 * 24)) + '</td></tr>');
                });

                userTable.append(html);
            },
            error: function (err) {
                console.log(err);
            }
        });

        function getFormattedDate(date) {
            var dt = new Date(parseInt(date.replace("/Date(", "").replace(")/", ""), 10))
            var date = new Date(Date.parse(dt));

            return date.getFullYear() + "/" + (date.getMonth() + 1) + "/" + (date.getUTCDate());
        }
    });
</script>

